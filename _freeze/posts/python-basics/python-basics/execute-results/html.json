{
  "hash": "c8bebc6187847702baacab7d2e837987",
  "result": {
    "markdown": "---\ntitle: \"Python Basics\"\nauthor: \"Nada Trabelsi\"\ndate: \"2024-02-20\"\ncategories: [code, data analysis]\nimage: \"image.jpg\"\n\nexecute: \n  warning: false\n  message: false\n  code-tools: true\n  \ntoc: true\n\nformat: \n  html: default\n  ipynb: default\nformat-links: [ipynb]\n---\n\n## What is Python?\n\nPython is a high-level, interpreted programming language.\n\n## Variables and Data Types\n\nVariables can store data of different types. There are many different data types.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\ninteger_variable = 10\nstring_variable = 'Hello'\nfloat_variable = 10.5\nboolean_variable = True\nnothing_variable = None\n```\n:::\n\n\n## Control Structures\n\nPython supports basic conditions from math:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# Equals: a == b\n# Not Equals: a != b\n# Less than: a < b\n# Less than or equal to: a <= b\n# Greater than: a > b\n# Greater than or equal to: a >= b\n```\n:::\n\n\n## Lists, Dictionaries, and Tuples\nA list is a collection which is ordered and changeable.\n\nA dictionary is a collection which is unordered, changeable and indexed.\n\nA tuple is a collection which is immutable.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# List example:\nmy_list = ['apple', 'banana', 'cherry']\n\n# Dictionary example:\nmy_dict = {'name': 'John', 'age': 36}\n\n# Tuple example:\nmy_tuple = (1, 2, 3)\n```\n:::\n\n\n## for Loops\nA loop is a way of executing a piece of code over and over \n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nname_list = [\"Ben\", \"Chris\", \"Kate\", \"Mary\"]\n\nfor name in name_list:\n    print(name)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nBen\nChris\nKate\nMary\n```\n:::\n:::\n\n\n## Slicing Methods\n\nAn index is the position of a specific element in a sequence. Indexing in Python starts with 0.\n\nSlicing is a way to get a subset of a data object.\n\nYou can slice by using square brackets [], a start index, and an end index. You can also incude a \"step\" count to determine how you want to skip position by.\n\nformat: [start : end : step]\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nstring = \"abcdefghijklmnaop\"\nprint( string[1 : 6 : 2] )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nbdf\n```\n:::\n:::\n\n\n## Importing Modules, Packages, and Libraries\nA module is a group of related codes saved in a file with the extension .py\n\nA package is a directory of a collection of modules\n\nA library is a collection of packages\n\nYou can import modules, open Anaconda Prompt or Terminal and run:\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\npip install module_name\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRequirement already satisfied: module_name in c:\\users\\15857\\anaconda3\\lib\\site-packages (0.6.0)Note: you may need to restart the kernel to use updated packages.\n\n```\n:::\n:::\n\n\nTo install a module on Google Colab add a excalamation point ! in the beginning\n\n## Practice Problems\n\nQuestion 1.\n\nUsing Python operations only, calculate below:\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n2**5/(7*(4-2**3))\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n-1.1428571428571428\n```\n:::\n:::\n\n\nQuestion 2.\n\nFor each expression below, what is the value of the expression? Explain thoroughly.\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n20 == '20'\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\nFalse\n```\n:::\n:::\n\n\nFalse, because the integer 20 is not equal to the string 20.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nx = 4.0\ny = .5\nz = 3*y - x\n\nx < y or 3*y < x\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nTrue\n```\n:::\n:::\n\n\nTrue because by using \"or\" you only need one of the statements to be true. So although one is false, because the other is true, the whole expression is true.\n\nQuestion 3.\n\nWrite a Python code that uses slicing and the print() function to print out the following message:\n\nThe total trip cost is: $12.80\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nfare = \"$10.00\"\ntip = \"2.00$\"\ntax = \"$ 0.80\"\n```\n:::\n\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\ntotal= fare[1] + tip[0] + \".\" + tax[4:6]\nprint(\"The total trip is: $\" + total)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe total trip is: $12.80\n```\n:::\n:::\n\n\nQuestion 4.\n\nWrite a Python code that uses print() and max() functions to print out the largest value in the list, list_variable, as follows:\n\nThe largest value in the list is: 1000\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nlist_variable = [100, 144, 169, 1000, 8]\nprint(\"The largest value in the list is: \", max(list_variable))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe largest value in the list is:  1000\n```\n:::\n:::\n\n\nQuestion 5.\n\nImport the pandas library as pd. Install the itables package. From itables, import the functions init_notebook_mode and show.\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nimport pandas as pd\n!pip install itables\nfrom itables import init_notebook_mode\nfrom itables import show\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRequirement already satisfied: itables in c:\\users\\15857\\anaconda3\\lib\\site-packages (1.7.0)\nRequirement already satisfied: IPython in c:\\users\\15857\\anaconda3\\lib\\site-packages (from itables) (8.15.0)\nRequirement already satisfied: pandas in c:\\users\\15857\\anaconda3\\lib\\site-packages (from itables) (2.0.3)\nRequirement already satisfied: numpy in c:\\users\\15857\\anaconda3\\lib\\site-packages (from itables) (1.24.3)\nRequirement already satisfied: backcall in c:\\users\\15857\\anaconda3\\lib\\site-packages (from IPython->itables) (0.2.0)\nRequirement already satisfied: decorator in c:\\users\\15857\\anaconda3\\lib\\site-packages (from IPython->itables) (5.1.1)\nRequirement already satisfied: jedi>=0.16 in c:\\users\\15857\\anaconda3\\lib\\site-packages (from IPython->itables) (0.18.1)\nRequirement already satisfied: matplotlib-inline in c:\\users\\15857\\anaconda3\\lib\\site-packages (from IPython->itables) (0.1.6)\nRequirement already satisfied: pickleshare in c:\\users\\15857\\anaconda3\\lib\\site-packages (from IPython->itables) (0.7.5)\nRequirement already satisfied: prompt-toolkit!=3.0.37,<3.1.0,>=3.0.30 in c:\\users\\15857\\anaconda3\\lib\\site-packages (from IPython->itables) (3.0.36)\nRequirement already satisfied: pygments>=2.4.0 in c:\\users\\15857\\anaconda3\\lib\\site-packages (from IPython->itables) (2.15.1)\nRequirement already satisfied: stack-data in c:\\users\\15857\\anaconda3\\lib\\site-packages (from IPython->itables) (0.2.0)\nRequirement already satisfied: traitlets>=5 in c:\\users\\15857\\anaconda3\\lib\\site-packages (from IPython->itables) (5.7.1)\nRequirement already satisfied: colorama in c:\\users\\15857\\anaconda3\\lib\\site-packages (from IPython->itables) (0.4.6)\nRequirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\15857\\anaconda3\\lib\\site-packages (from pandas->itables) (2.8.2)\nRequirement already satisfied: pytz>=2020.1 in c:\\users\\15857\\anaconda3\\lib\\site-packages (from pandas->itables) (2023.3.post1)\nRequirement already satisfied: tzdata>=2022.1 in c:\\users\\15857\\anaconda3\\lib\\site-packages (from pandas->itables) (2023.3)\nRequirement already satisfied: parso<0.9.0,>=0.8.0 in c:\\users\\15857\\anaconda3\\lib\\site-packages (from jedi>=0.16->IPython->itables) (0.8.3)\nRequirement already satisfied: wcwidth in c:\\users\\15857\\anaconda3\\lib\\site-packages (from prompt-toolkit!=3.0.37,<3.1.0,>=3.0.30->IPython->itables) (0.2.5)\nRequirement already satisfied: six>=1.5 in c:\\users\\15857\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.2->pandas->itables) (1.16.0)\nRequirement already satisfied: executing in c:\\users\\15857\\anaconda3\\lib\\site-packages (from stack-data->IPython->itables) (0.8.3)\nRequirement already satisfied: asttokens in c:\\users\\15857\\anaconda3\\lib\\site-packages (from stack-data->IPython->itables) (2.0.5)\nRequirement already satisfied: pure-eval in c:\\users\\15857\\anaconda3\\lib\\site-packages (from stack-data->IPython->itables) (0.2.2)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "python-basics_files"
    ],
    "filters": [],
    "includes": {}
  }
}