{
  "hash": "1c28c063a1808b1182ab6387ca0e6534",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: ggplot Basics\nauthor: Nada Trabelsi\ndate: 2025-02-19\ncategories: [code, data analysis] # tags for a blog post (e.g., python)\nimage: ggplot2.png \n\nexecute: \n  warning: false\n  message: false\n  \ntoc: true\n---\n\n\n# Aesthetic Mapping\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load libraries\nlibrary(tidyverse)\nlibrary(ggthemes)\n\n#set theme\n\ntheme_set(theme_minimal())\n```\n:::\n\n\n\n\n## Setting Color and Shape\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   color = class,\n                   shape = class) )\n```\n\n::: {.cell-output-display}\n![](ggplot_basics_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## Setting Transparency and Size\n\nAdding transparency and changing size can help with issues of overplotting.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .2)\n```\n\n::: {.cell-output-display}\n![](ggplot_basics_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             size = 3)\n```\n\n::: {.cell-output-display}\n![](ggplot_basics_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\n\n\n# Facets\n\nFacets can be used to split plots into multiple different facets to display subplots of different subsets of the data. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             alpha = .5) + \n  facet_wrap( . ~ class, nrow = 2)\n```\n\n::: {.cell-output-display}\n![](ggplot_basics_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n# Geometric Objects\n\ngeom_x() is the geometrical object that is used for representing data in a plot. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncows_filtered <- read_csv(\n  'https://bcdanl.github.io/data/cows_filtered.csv')\n```\n:::\n\n\n## Scatterplot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .3)\n```\n\n::: {.cell-output-display}\n![](ggplot_basics_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Fitted Lines\nWe can set the linetype of the fitted line with linetype()\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot( data = mpg ) + \n  geom_smooth( mapping = \n                 aes( x = displ, \n                      y = hwy, \n                      linetype = drv) )\n```\n\n::: {.cell-output-display}\n![](ggplot_basics_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nYou can get a linear fitted line by setting method = lm.\n\nThe grey shaded area is the standard error. It can be removed by setting se = False (or F)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot( data = mpg ) + \n  geom_smooth( mapping = \n                 aes( x = displ, \n                      y = hwy),\n               method = lm,\n               se = F)\n```\n\n::: {.cell-output-display}\n![](ggplot_basics_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## Histogram\nHistograms can be used to plot continuous variables like a bar chart. \n\nNumber of bins or the width of the bars can be set with “bins =” and “binwidth =”, respectively. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(diamonds) +\n  geom_histogram(aes(x = price), \n                 bins = 100)\n```\n\n::: {.cell-output-display}\n![](ggplot_basics_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## Frequency Polygon\n\nA frequency polygon is a line version of a histogram. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(diamonds) +\n  geom_freqpoly(aes(x = price), \n                 bins = 100)\n```\n\n::: {.cell-output-display}\n![](ggplot_basics_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n## Combining Geom Objects\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gapminder)\ngapminder <- gapminder\np <- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\np_out <- p + geom_point(aes(color = continent)) + geom_smooth(se = F) \np_out\n```\n\n::: {.cell-output-display}\n![](ggplot_basics_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n# Saving a Plot\n\nWe can save our plots using ggsave().\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"lifexp_vs_gdp_gradient.pdf\",\n       plot = p_out, height = 8, width = 10, units = \"in\")\n```\n:::\n",
    "supporting": [
      "ggplot_basics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}